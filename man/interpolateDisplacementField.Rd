% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/displacementField.r
\name{interpolateDisplacementField}
\alias{interpolateDisplacementField}
\title{evaluate a displacement field using gaussian smoothed interpolation of a discrete displacement field}
\usage{
interpolateDisplacementField(
  dispfield,
  points,
  k = 10,
  sigma = 20,
  gamma = 1,
  type = c("Gauss", "Laplace", "Exponential", "Bspline", "TPS"),
  subsample = 2000,
  lambda = 1e-08,
  threads = 0,
  ...
)
}
\arguments{
\item{dispfield}{@param dispfield displacement field of class "DisplacementField", e.g. created using \code{\link{createDisplacementField}}}

\item{points}{matrix or mesh3d at which to evaluate the interpolated displacement field}

\item{k}{integer: number of k closest points to evaluate.}

\item{sigma}{kernel bandwidth used for smoothing. For all kernels except B-spline, sigma controls the importance of the neighbourhood by defining the bandwidth of the smoothing kernel. For B-spline it defines the support (the higher, the "wobblier" the deformation field can become.}

\item{gamma}{dampening factor (displacement vectors will be divided by \code{gamma}}

\item{type}{kernel function for smoothing are "Gauss","Laplace", "Exponential", "Bspline" and "TPS" (or any abbreviation thereof).}

\item{subsample}{integer: amount to subsample the field in case of type="TPS"}

\item{lambda}{smoothing factor for TPS}

\item{threads}{integer: number of threads to use for computing the interpolation.}

\item{...}{additional parameters - currentyl unused.}
}
\value{
returns an interpolated displacement field of class \code{displacement_field} at the positions of \code{points}.
}
\description{
evaluate a displacement field using gaussian smoothed interpolation of a given discrete displacement field
}
\note{
The k-closest coordinates of the displacement field are used to calculate a weighted (smoothed) displacement field for each point. The displacement field can then optionally be further smoothed using the function \code{\link{smoothDisplacementField}}. The smoothing kernels are  "Gauss","Laplace" and "Exponential". The displacement at point \code{x} will be the weighted displacment vectors of the k-closest displacement vectors. Be \code{d} the distance to a neightbouring point, the weight will be calculated as:

Gaussian:  \eqn{w(d) = exp(\frac{-d^2}{2\sigma^2})}{w(d) = exp(-d^2/2*sigma^2)}

Laplacian: \eqn{w(d) = exp(\frac{-d}{\sigma})}{w(d) = exp(-d/sigma)}

Exponential: \eqn{w(d) = exp(\frac{-d}{2\sigma^2})}{w(d) = exp(-d/2*sigma^2)}
}
\examples{
require(Rvcg);require(Morpho)
data(dummyhead)
humoff <- meshOffset(dummyhead.mesh,offset=5)
dispfield <- createDisplacementField(dummyhead.mesh,humoff)
\dontrun{
## this only runs with latest Rvcg build from master
highres <- vcgSubdivide(dummyhead.mesh)
ifield <- interpolateDisplacementField(dispfield,highres,threads=2,sigma = 10,k=50)
}
}
\seealso{
\code{\link{plot.DisplacementField}, \link{applyDisplacementField}, \link{smoothDisplacementField}}
}
